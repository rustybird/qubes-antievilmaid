#!/bin/bash
set -e -o pipefail
shopt -s expand_aliases

# Listing tcsd.service in anti-evil-maid-seal.service's Requires= and After=
# would cause it to always be started (even when not booting in AEM mode or
# when sealing is unnecessary) due to the way systemd evaluates conditions.
# Putting the systemctl command in ExecStartPre= is also insufficient: The user
# might want to run this script manually after changing the secret(s).

systemctl start tcsd

alias plymouth_message="plymouth message --text"
source anti-evil-maid-lib
trap 'rm -rf "$CACHE_DIR"' EXIT


# define sealing and device variables

source /etc/anti-evil-maid.conf
Z=$(tpm_z_srk)

LABEL=$LABEL_PREFIX${1-$(cat "$SUFFIX_CACHE")}
DEV=/dev/disk/by-label/$LABEL

message "Checking whether any split-MFA AEM device is connected..."
unset SPLIT_DEV SPLIT_LABEL
for splitdev in ${AEM_DIR}/${SPLIT_LABEL_PREFIX}*; do
    SPLIT_DEV=/dev/disk/by-label/$(basename $splitdev)
    if [ -b "$SPLIT_DEV" ]; then
        SPLIT_LABEL=$(basename "$SPLIT_DEV")
        message "Found split-MFA AEM device: $SPLIT_LABEL"
        break
    fi
done

if [ -z "$SPLIT_DEV" ]; then
    message "No split-MFA AEM device found."
fi

# ensure that all standard PCRs configured to be used have been extended

pcrs=$(printf %s "$SEAL" | grep -Eo '\b1[3789]\b') || true

if grep -E "^PCR-(${pcrs//$'\n'/|}):( 00| FF){20}" /sys/devices/*/*/pcrs;
   [ $? != 1 ]; then
    message "PCR sanity check failed!"
    message "See /usr/share/doc/anti-evil-maid/README for details."
    exit 1
fi


# seal and save secret(s) to root partition

mkdir -p "$TPM_DIR/$LABEL"

SEALED=0
for ext in txt png key otp; do
     input=$AEM_DIR/$LABEL/secret.$ext
    output=$TPM_DIR/$LABEL/secret.$ext.sealed2

    if [ ! -e "$input" ]; then
        message "Absent $input"
    elif if [ ! -t 0 ]; then cat "$SRK_PASSWORD_CACHE"; fi |
         tpm_sealdata $Z $SEAL -i "$input" -o "$output"; then
        rm -f "${output%2}"
        SEALED=$((SEALED + 1))
        message "Sealed $input using $SEAL"
    else
        message "Failed $input"
    fi
done

if [ "$SEALED" = 0 ]; then
    exit 1
fi


# seal and save split-MFA secret(s) to root partition
if [ -n "$SPLIT_LABEL" ]; then
    message "Sealing split-MFA secrets..."
    mkdir -p "$TPM_DIR/$SPLIT_LABEL"
    SEALED=0
    for ext in key; do
         input=$AEM_DIR/$SPLIT_LABEL/secret.$ext
        output=$TPM_DIR/$SPLIT_LABEL/secret.$ext.sealed2

        if [ ! -e "$input" ]; then
            message "Absent $input"
        elif if [ ! -t 0 ]; then cat "$SRK_PASSWORD_CACHE"; fi |
                tpm_sealdata $Z $SEAL -i "$input" -o "$output"; then
            rm -f "${output%2}"
            SEALED=$((SEALED + 1))
            message "Sealed $input using $SEAL"
        else
            message "Failed $input"
        fi
    done

    if [ "$SEALED" = 0 ]; then
        exit 1
    fi
fi


# mount device

waitfor -b "$DEV"

if CUR_MNT=$(devtomnt "$DEV") && [ -n "$CUR_MNT" ]; then
    MNT=$CUR_MNT
else
    CUR_MNT=
    MNT=/mnt/anti-evil-maid/$LABEL
    mkdir -p "$MNT"
    mount "$DEV" "$MNT"
fi


# copy secret(s) to device

synctpms "$LABEL" "$MNT"


# unmount device

if [ -z "$CUR_MNT" ]; then
    umount "$MNT"
    if external "$DEV" && removable "$DEV"; then
        waitfor ! -b "$DEV"
    fi
fi


if [ -n "$SPLIT_LABEL" ]; then
    # mount
    waitfor -b "$SPLIT_DEV"

    if CUR_MNT=$(devtomnt "$SPLIT_DEV") && [ -n "$CUR_MNT" ]; then
        MNT=$CUR_MNT
    else
        CUR_MNT=
        MNT=/mnt/anti-evil-maid/$SPLIT_LABEL
        mkdir -p "$MNT"
        mount "$SPLIT_DEV" "$MNT"
    fi


    # copy secret(s) to device
    synctpms "$SPLIT_LABEL" "$MNT"


    # unmount device
    if [ -z "$CUR_MNT" ]; then
        umount "$MNT"
        if external "$SPLIT_DEV" && removable "$SPLIT_DEV"; then
            waitfor ! -b "$SPLIT_DEV"
        fi
    fi
fi
